id: hdchina
name: hdchina
domain: https://hdchina.org/
encoding: UTF-8
config_url: https://raw.githubusercontent.com/Wangsc1/All/master/PT/hdchina.yml

login:
  test:
    selector: a[href^="logout.php"]

category_mappings:
  - { id: 20, cate_level1: Movie, cate_level2: Movies/BluRay, cate_level2_desc "原盘(Full BD)" }
  - { id: 17, cate_level1: Movie, cate_level2: Movies/HD, cate_level2_desc "电影Movie(1080p)" }
  - { id: 16, cate_level1: Movie, cate_level2: Movies/HD, cate_level2_desc "电影Movie(1080i)" }
  - { id: 9, cate_level1: Movie, cate_level2: Movies/HD, cate_level2_desc "电影Movie(720p)" }
  - { id: 13, cate_level1: TV, cate_level2: TV, cate_level2_desc "欧美剧(EU/US TV series)" }
  - { id: 25, cate_level1: TV, cate_level2: TV, cate_level2_desc "中港台剧集(Chinese TV series)" }
  - { id: 26, cate_level1: TV, cate_level2: TV, cate_level2_desc "韩剧(Kor Drama)" }
  - { id: 24, cate_level1: TV, cate_level2: TV, cate_level2_desc "日剧(Jpn Drama)" }
  - { id: 21, cate_level1: TV, cate_level2: TV, cate_level2_desc "欧美剧集包(EU/US TV series pack)" }
  - { id: 22, cate_level1: TV, cate_level2: TV, cate_level2_desc "中港台剧集包(Chinese TV series pack)" }
  - { id: 23, cate_level1: TV, cate_level2: TV, cate_level2_desc "日韩剧集包(JPN/KOR drama pack)" }
  - { id: 27, cate_level1: Movie, cate_level2: Movies/SD, cate_level2_desc "iPad视频(iPad Video)" }
  - { id: 5, cate_level1: Documentary, cate_level2: TV/Documentary, cate_level2_desc "纪录片(Documentary)" }
  - { id: 15, cate_level1: TV, cate_level2: TV/Sport, cate_level2_desc "体育节目(Sports)" }
  - { id: 14, cate_level1: Anime, cate_level2: TV/Anime, cate_level2_desc "动画片(Animation)" }
  - { id: 401, cate_level1: TV, cate_level2: TV, cate_level2_desc "综艺(TV Shows)" }
  - { id: 402, cate_level1: Music, cate_level2: Audio, cate_level2_desc "演唱会(Vocal Concert)" }
  - { id: 406, cate_level1: Music, cate_level2: Audio, cate_level2_desc "MV(Music Video)" }
  - { id: 408, cate_level1: Music, cate_level2: Audio, cate_level2_desc "音乐(Music)" }
  - { id: 19, cate_level1: Music, cate_level2: Audio, cate_level2_desc "补充音轨(Audio Track)" }
  - { id: 405, cate_level1: Music, cate_level2: Audio, cate_level2_desc "戏剧(Drama)" }
  - { id: 404, cate_level1: Other, cate_level2: Books, cate_level2_desc "书籍(Book)" }
  - { id: 409, cate_level1: Other, cate_level2: Other, cate_level2_desc "其他(Other)" }
  - { id: 410, cate_level1: Movie, cate_level2: Movies/HD, cate_level2_desc "4K UltraHD" }
  - { id: 411, cate_level1: TV, cate_level2: TV, cate_level2_desc "旅游(Travel)" }
  - { id: 412, cate_level1: TV, cate_level2: TV, cate_level2_desc "饮食(Food)" }

userinfo:
  path: https://hdchina.org/rules.php
  item:
    selector: div.userinfo
  fields:
    uid:
      default_value: 0
      selector: a[href^="userdetails.php?id="]
      attribute: href
      filters:
        - name: re_search
          args: [ '\d+', 0 ]
    user_group:
      default_value: ''
      selector: a[href^="userdetails.php?id="]
      attribute: class
    seeding:
      default_value: 0
      selector: i[title="当前做种"]
      method: next_sibling
    leeching:
      default_value: 0
      selector: i[title="当前下载"]
      method: next_sibling
      filters:
        - name: replace
          args: [ ")","" ]
    username:
      default_value: '未知用户名'
      selector: a[href^="userdetails.php?id="]
    share_ratio:
      default_value: ''
      selectors: p
      index: -1
      filters:
        - name: re_search
          args: [ '分享率：([^\s上]+)',1 ]
        - name: replace
          args: [ '无限','inf' ]
    uploaded:
      default_value: 0
      selectors: p
      index: -1
      filters:
        - name: re_search
          args: [ '上传量：([\d\.]+\s*(?:TB|GB|MB|KB))',1 ]
        - name: replace
          args: [ '无限','inf' ]
    downloaded:
      default_value: 0
      selectors: p
      index: -1
      filters:
        - name: re_search
          args: [ '下载量：\s*([\d\.]+\s*(?:TB|GB|MB|KB))',1 ]
        - name: replace
          args: [ '无限','inf' ]
    vip_group:
      case:
        a[class^="VIP"]: true
        "*": false
search:
  paths:
    - path: torrents.php
      method: get
  query:
    $raw: "{% for c in query.cates %}cat{{c}}=1&{% endfor %}"
    search: "{% if query.imdb_id %}{{query.imdb_id}}{%else%}{{query.keyword}}{% endif %}"
    # 0 incldead, 1 active, 2 dead
    incldead: 1
    # 0 all, 1 normal, 2 free, 3 2x, 4 2xfree, 5 50%, 6 2x50%, 7 30%
    spstate: "{% if query.free %}2{% else %}0{% endif %}"
    # 0 title, 1 descr, 3 uploader, 4 imdburl (searching imdburl does not work with tt1234567, but descr is good)
    search_area: "{% if query.imdb_id %}4{% else %}0{%endif%}"
    # 0 AND, 1 OR, 2 exact
    search_mode: 0
    sort: "{{ query.sort }}"
    type: "{{ query.type }}"
    page: "{{ query.page }}"
  pre_handler: hdchina_freesession_check_handler
  result_filter: hdchina_free_ajax_filter


torrents:
  list:
    selector: table.torrent_list > tr:has(td.t_name)
  fields:
    id:
      selector: a[href^="details.php?id="]
      attribute: href
      filters:
        - name: re_search
          args: [ '\d+', 0 ]
    title:
      selector: a[title][href^="details.php?id="]
    description:
      selector: table.tbname > tr > td > h4
    category:
      selector: a[href^="?cat="]
      attribute: href
      filters:
        - name: querystring
          args: cat
    details:
      selector: a[href^="details.php?id="]
      attribute: href
    download:
      selector: a[href^="download.php?hash="]
      attribute: href
    size:
      selector: td.t_size
    grabs:
      selector: td.t_completed
    seeders:
      selector: td.t_torrents
    leechers:
      selector: td.t_leech
    date:
      selector: td.t_time > span[title]
      attribute: title
      filters:
        - name: dateparse
          args: "%Y-%m-%d %H:%M:%S"
    free_deadline:
      default_value: "{% if fields['downloadvolumefactor']==0 %}{{max_time}}{% endif%}"
      default_value_format: '%Y-%m-%d %H:%M:%S.%f'
      selector: img.pro_free,img.pro_free2up
      attribute: onmouseover
      filters:
        - name: re_search
          args: [ '\d+-\d+-\d+ \d+:\d+:\d+', 0 ]
        - name: dateparse
          args: "%Y-%m-%d %H:%M:%S"
    csrf:
      selector: meta[name="x-csrf"]
      attribute: content
