/******************************

Sub-StoreÂ§ñÁΩÆÊµÅÈáèÊü•ËØ¢ËÑöÊú¨

ËØ•ËÑöÊú¨Âü∫‰∫éSub-Store, ÂèØËß£ÂÜ≥APP‰ΩøÁî®Sub-StoreÈìæÊé•Âêé, Ê≤°ÊúâÊµÅÈáèÈÄöÁü•ÁöÑÈóÆÈ¢ò. ‰ΩøÁî®ÂâçÈúÄÁ°ÆËÆ§ÊÇ®ÁöÑÊú∫Âú∫ËÆ¢ÈòÖÊòØÂê¶ÊîØÊåÅÊµÅÈáè‰ø°ÊÅØ.
Sub-StoreËÆ¢ÈòÖÁÆ°ÁêÜÂô®: https://github.com/Peng-YM/Sub-Store

ÊµãËØïÂÖºÂÆπ: QuantumultX, Surge, Loon. 
‰ΩøÁî®ÊñπÊ≥ï: ÊâìÂºÄSub-Store => ËÆ¢ÈòÖ => ÁºñËæë => ËäÇÁÇπÊìç‰Ωú+ => ËÑöÊú¨Êìç‰Ωú => Â°´ÂÖ•ËÑöÊú¨ÈìæÊé•ÊàñÁ≤òË¥¥ËÑöÊú¨ => ‰øùÂ≠ò

ÊÇ®ÁöÑAPPÊõ¥Êñ∞Sub-StoreËÆ¢ÈòÖÈìæÊé•Êó∂, Â∞ÜËá™Âä®ÂèëÈÄÅÊµÅÈáèÈÄöÁü•.

ËÑöÊú¨ÈìæÊé•: https://raw.githubusercontent.com/Wangsc1/All/master/Scripts/SubStore_DaTa.js

******************************/

function operator(proxies) {
  try {
    if ($request.headers["User-Agent"].match(/Quant|Surge|Loon|Decar/)) {
      function AllSubs(subsUrl, subsName) {
        $.http.get(subsUrl).then(resp => {
          try { //reference to https://github.com/KOP-XIAO/QuantumultX/blob/master/Scripts/resource-parser.js
            var sinfo = JSON.stringify(resp.headers).replace(/ /g, "").toLowerCase();
            var total = (parseFloat(sinfo.split("total=")[1].split(",")[0]) / (1024 ** 3)).toFixed(0);
            var usd = ((parseFloat(sinfo.indexOf("upload") != -1 ? sinfo.split("upload=")[1].split(",")[0] : "0") + parseFloat(sinfo.split("download=")[1].split(",")[0])) / (1024 ** 3)).toFixed(2);
            var left = ((parseFloat(sinfo.split("total=")[1].split(",")[0]) / (1024 ** 3)) - ((parseFloat(sinfo.indexOf("upload") != -1 ? sinfo.split("upload=")[1].split(",")[0] : "0") + parseFloat(sinfo.split("download=")[1].split(",")[0])) / (1024 ** 3))).toFixed(2);
            if (sinfo.indexOf("expire=") != -1) {
              var epr = new Date(parseFloat(sinfo.split("expire=")[1].split(",")[0]) * 1000);
              var year = epr.getFullYear();
              var mth = epr.getMonth() + 1 < 10 ? '0' + (epr.getMonth() + 1) : (epr.getMonth() + 1);
              var day = epr.getDate() < 10 ? "0" + (epr.getDate()) : epr.getDate();
              var epr = `üïí ËøáÊúüÊó∂Èó¥:„Äå ${year}-${mth}-${day} „Äç`
            } else {
              var epr = "";
            }
            $.notify(`‚úàÔ∏è ËÆ¢ÈòÖÊú∫Âú∫:„Äå ${subsName} „Äç`, epr, `‚åõÔ∏è Â∑≤Áî®ÊµÅÈáè:„Äå ${usd} GB „Äç\n‚è≥ Ââ©‰ΩôÊµÅÈáè:„Äå ${left} GB „Äç`)
          } catch (errInfo) {
            console.log(`\n‚úàÔ∏è ËÆ¢ÈòÖÊú∫Âú∫:„Äå ${subsName} „Äç\n‚ÄºÔ∏è Êü•ËØ¢Â§±Ë¥•: ${errInfo}`)
          }
        }, er => $.notify(`‚úàÔ∏è ËÆ¢ÈòÖÊú∫Âú∫:„Äå ${subsName} „Äç`, ``, `‚ÄºÔ∏è Êü•ËØ¢Â§±Ë¥•: ${er}`))
      }
      const subtag = $request.url.match(/download\/(collection\/)?([\w-_]*)/)[2]
      const rawInfo = $.read('subs')
      if ($request.url.match(/\/collection\//)) {
        const readName = $.read('collections')
        for (var i = 0; i < readName[subtag].subscriptions.length; i++) {
          const rawUrl = rawInfo[readName[subtag].subscriptions[i]].url;
          const rawName = readName[subtag].subscriptions[i];
          AllSubs(rawUrl, rawName);
        }
      } else {
        AllSubs(rawInfo[subtag].url, rawInfo[subtag].name);
      }
    }
  } catch (err) {
    console.log(`\n‚ÄºÔ∏è Êü•ËØ¢Â§±Ë¥•: \n${err.message}`)
  } finally {
    return proxies
  }
}